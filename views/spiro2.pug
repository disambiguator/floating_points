doctype html
html(lang='en')
  include includes/head.pug
  script#vertexshader(type="x-shader/x-vertex").
    #ifdef GL_ES
    precision highp float;
    #endif

    uniform float amplitude;
    uniform vec2 mouse;
    attribute float displacement;
    varying vec3 vNormal;

    void main() {

    vNormal = normal;

    vec4 oldPosition = projectionMatrix *
           modelViewMatrix *
           vec4(position,1.0);

    vec3 newPosition = position +
    displacement * amplitude * pow(distance(oldPosition.xy, mouse),2.) * vec3(mouse, 0.);

    gl_Position = projectionMatrix *
      modelViewMatrix *
      vec4(newPosition,1.0);
    }
  script#fragmentshader(type="x-shader/x-fragment").
    #ifdef GL_ES
    precision highp float;
    #endif

    // same name and type as VS
    varying vec3 vNormal;

    void main() {

      // calc the dot product and clamp
      // 0 -> 1 rather than -1 -> 1
      vec3 light = vec3(0.5,0.2,1.0);

      // ensure it's normalized
    light = normalize(light);

      float dProd = max(0.0, dot(vNormal, light));

      // feed into our frag colour
    gl_FragColor = vec4(1.0);

    }
  body
    label Amplitude
    input(type='range', min='0', max='0.001', step='0.00001', oninput='amplitudeSlider(this)')
    div#spiro
    script(type='text/javascript', src='dist/main.js')
